@using MedicalCenterRegistration.Helpers
@model MedicalCenterRegistration.Models.ViewModels.VisitSummaries.CreateVisitSummaryViewModel

@{
    ViewData["Title"] = "Edytuj";
}

<div class="p-1 p-sm-4">
    <div class="mb-2">
        <a class="btn btn-outline-primary btn-xs" asp-controller="Visits" asp-action="DoctorVisits">
            <i class="bi bi-arrow-left-circle me-1"></i>
            Wróć do listy wizyt
        </a>
    </div>

    <h1>Edytuj podsumowanie wizyty</h1>
    <h4 class="text-muted">Podsumuj wnioski z wizyty aby przekazać pacjentowi istotne informacje.</h4>
    <hr />


    <form asp-action="Edit" asp-route-visitId="@Model.VisitId" method="post" enctype="multipart/form-data">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>

        <input  type="hidden" asp-for="Id" value="@Model.Id" />
        <div class="row mb-3">
            <div class="col-md-6">
                <div class="form-group">
                    <label asp-for="Description" class="control-label"></label>
                    <textarea asp-for="Description" class="form-control" rows="5"></textarea>
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-4">
                <div class="mb-3">
                    <label class="form-label">Dodaj załączniki</label>
                    <input multiple type="file" asp-for="UploadedFiles" id="fileInput" class="form-control" accept="image/*, .pdf" />
                    <span asp-validation-for="UploadedFiles" class="text-danger"></span>
                    <div class="form-text">Możliwe jest dodawanie obrazów, oraz plików .pdf</div>
                </div>
                <div id="fileListContainer" ** class="mt-3 mb-3">
              
                </div>

                <div class="alert alert-warning">Edycja załączników spowoduje usunięcie poprzednio dodanych załączników.</div>

                <div class="mb-3">
                <span>Aktualnie dodane załączniki:</span>
                @if (Model.CurrentUserFiles != null && Model.CurrentUserFiles.Any())
                {
                    <ul class="list-group">
                        @foreach (var file in Model.CurrentUserFiles)
                        {
                            <li class="list-group-item">
                                <a href="@Url.Action("DownloadFile", "UserFiles", new { filePath = file.FilePath, fileName = file.FileName })" target="_blank">
                                    @file.FileName
                                </a>
                            </li>
                        }
                    </ul>
                }
                else
                {
                    <span>Brak załączników</span>
                }
                </div>


                <div class="form-group">
                    <input type="submit" value="Dodaj podsumowanie" class="btn btn-primary" />
                </div>
            </div>
        </div>

        <div>
    </form>



</div>

<script>
    // javascript to display added file's names
    document.addEventListener('DOMContentLoaded', function () {
        const fileInput = document.getElementById('fileInput');
        const fileListContainer = document.getElementById('fileListContainer');

        const listUploadedFiles = (files) => {
            fileListContainer.innerHTML = '';

            if (files.length > 0) {
                const ul = document.createElement('ul');

                ul.classList.add('list-group');
                ul.classList.add('pe-none')

                for (let i = 0; i < files.length; i++) {
                    const file = files[i];

                    const li = document.createElement('li');
                    const classes = ['list-group-item', 'badge', 'badge-pill', 'badge-secondary']

                    classes.forEach(cls => {
                        li.classList.add(cls);
                    });

                    li.textContent = file.name.substr(0, 30).concat('...')

                    ul.appendChild(li);
                }

                fileListContainer.innerHTML = '<span>Wybrane pliki:</span>';
                fileListContainer.appendChild(ul);

            }

        }

        const initialFiles = fileInput.files;
        listUploadedFiles(initialFiles);

        fileInput.addEventListener('change', function (event) {
            const files = event.target.files;
            listUploadedFiles(files)
        });
    })
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
